// <auto-generated />
using System;
using FonteViva.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace FonteViva.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250603211050_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("SEQ_ID_CONTATO");

            modelBuilder.HasSequence<int>("SEQ_ID_ENDERECO");

            modelBuilder.HasSequence<int>("SEQ_ID_ESTACAO");

            modelBuilder.HasSequence<int>("SEQ_ID_MATERIAL");

            modelBuilder.HasSequence<int>("SEQ_ID_SENSOR");

            modelBuilder.Entity("Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CONTATO")
                        .HasDefaultValueSql("SEQ_ID_CONTATO.NEXTVAL");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("DS_CNPJ");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("DS_CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DS_EMAIL");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("DS_TELEFONE");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.HasIndex("CPF");

                    b.ToTable("T_FV_CONTATO", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ENDERECO")
                        .HasDefaultValueSql("SEQ_ID_ENDERECO.NEXTVAL");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR2(8)")
                        .HasColumnName("DS_CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("DS_CIDADE");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("DS_ESTADO");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("DS_PAIS");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DS_RUA");

                    b.HasKey("Id");

                    b.ToTable("T_FV_ENDERECO", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.EstacaoTratamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ESTACAO_TRATAMENTO")
                        .HasDefaultValueSql("SEQ_ID_ESTACAO.NEXTVAL");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("DS_CPF");

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("Date")
                        .HasColumnName("DT_INSTALACAO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasDefaultValue("I")
                        .HasColumnName("ST_ESTACAO");

                    b.HasKey("Id");

                    b.HasIndex("CPF");

                    b.ToTable("T_FV_ESTACAO_TRATAMENTO", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.Fornecedor", b =>
                {
                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("DS_CNPJ");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NM_FORNECEDOR");

                    b.HasKey("CNPJ");

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.ToTable("T_FV_FORNECEDOR", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MATERIAL")
                        .HasDefaultValueSql("SEQ_ID_MATERIAL.NEXTVAL");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("DS_CNPJ");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NM_MATERIAL");

                    b.Property<float>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("BINARY_FLOAT(10)")
                        .HasColumnName("NR_PRECO_UNIDADE");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NR_QUANT_ESTOQUE");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("TP_MATERIAL");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.ToTable("T_FV_MATERIAL", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.RegistroMedida", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("ID_REGISTRO");

                    b.Property<DateTime>("DtRegistro")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DT_REGISTRO");

                    b.Property<int>("IdSensor")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR");

                    b.Property<float>("Resultado")
                        .HasPrecision(12, 4)
                        .HasColumnType("BINARY_FLOAT(12)")
                        .HasColumnName("NR_RESULTADO");

                    b.HasKey("Id");

                    b.HasIndex("IdSensor");

                    b.ToTable("T_FV_REGISTRO_MEDIDA", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.Responsavel", b =>
                {
                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("DS_CPF");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NM_RESPONSAVEL");

                    b.HasKey("CPF");

                    b.ToTable("T_FV_RESPONSAVEL", (string)null);
                });

            modelBuilder.Entity("FonteViva.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR")
                        .HasDefaultValueSql("SEQ_ID_SENSOR.NEXTVAL");

                    b.Property<int>("IdEstacao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ESTACAO_TRATAMENTO");

                    b.Property<string>("TpMedida")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("TP_MEDIDA");

                    b.Property<string>("TpSensor")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("TP_SENSOR");

                    b.HasKey("Id");

                    b.HasIndex("IdEstacao");

                    b.ToTable("T_FV_SENSOR", (string)null);
                });

            modelBuilder.Entity("Contato", b =>
                {
                    b.HasOne("FonteViva.Models.Fornecedor", "Fornecedor")
                        .WithMany("Contatos")
                        .HasForeignKey("CNPJ")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FonteViva.Models.Responsavel", "Responsavel")
                        .WithMany("Contatos")
                        .HasForeignKey("CPF")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Fornecedor");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("FonteViva.Models.EstacaoTratamento", b =>
                {
                    b.HasOne("FonteViva.Models.Responsavel", "Responsavel")
                        .WithMany("EstacaoTratamentos")
                        .HasForeignKey("CPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("FonteViva.Models.Fornecedor", b =>
                {
                    b.HasOne("FonteViva.Models.Endereco", "Endereco")
                        .WithOne("Fornecedor")
                        .HasForeignKey("FonteViva.Models.Fornecedor", "IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("FonteViva.Models.Material", b =>
                {
                    b.HasOne("FonteViva.Models.Fornecedor", "Fornecedor")
                        .WithMany("Materials")
                        .HasForeignKey("CNPJ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("FonteViva.Models.RegistroMedida", b =>
                {
                    b.HasOne("FonteViva.Models.Sensor", "Sensor")
                        .WithMany("RegistroMedidas")
                        .HasForeignKey("IdSensor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("FonteViva.Models.Sensor", b =>
                {
                    b.HasOne("FonteViva.Models.EstacaoTratamento", "EstacaoTratamento")
                        .WithMany("Sensors")
                        .HasForeignKey("IdEstacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstacaoTratamento");
                });

            modelBuilder.Entity("FonteViva.Models.Endereco", b =>
                {
                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("FonteViva.Models.EstacaoTratamento", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("FonteViva.Models.Fornecedor", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("FonteViva.Models.Responsavel", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("EstacaoTratamentos");
                });

            modelBuilder.Entity("FonteViva.Models.Sensor", b =>
                {
                    b.Navigation("RegistroMedidas");
                });
#pragma warning restore 612, 618
        }
    }
}
